//! @file
//!
//! This source file was generated from CellML by chaste_codegen version 0.9.9
//!
//! Model: ICC_SMC
//!
//! Processed by chaste_codegen: https://github.com/ModellingWebLab/chaste-codegen
//!     (translator: chaste_codegen, model type: Normal)
//! on 2022-06-08 04:58:39
//!
//! <autogenerated>

#include "ICCNeuralCalib_SMC_noCases.hpp"
#include <cmath>
#include <cassert>
#include <memory>
#include "Exception.hpp"
#include "OdeSystemInformation.hpp"
#include "RegularStimulus.hpp"
#include "HeartConfig.hpp"
#include "IsNan.hpp"
#include "MathsCustomFunctions.hpp"




    double CellICCNeuralCalib_SMC_noCasesFromCellML::GetIntracellularCalciumConcentration()
    {
        return mStateVariables[1];
    }
    CellICCNeuralCalib_SMC_noCasesFromCellML::CellICCNeuralCalib_SMC_noCasesFromCellML(boost::shared_ptr<AbstractIvpOdeSolver> pSolver, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus)
        : AbstractCardiacCell(
                pSolver,
                20,
                0,
                pIntracellularStimulus)
    {
        // Time units: millisecond
        //
        this->mpSystemInfo = OdeSystemInformation<CellICCNeuralCalib_SMC_noCasesFromCellML>::Instance();
        Init();
        
        this->mParameters[0] = -72; // (var_i_BK__E_K) [voltage_units]
        this->mParameters[1] = 26; // (var_Membrane__C_m) [capacitance_units]
        this->mParameters[2] = 1; // (var_Membrane__Cor) [dimensionless]
        this->mParameters[3] = 0.038899999999999997; // (var_intracellular_Ca__eta) [per_time_units]
        this->mParameters[4] = 0; // (var_ICC_neural__stim_cholinergic) [dimensionless]
        this->mParameters[5] = 0; // (var_ICC_neural__stim_nitrergic) [dimensionless]
    }

    CellICCNeuralCalib_SMC_noCasesFromCellML::~CellICCNeuralCalib_SMC_noCasesFromCellML()
    {
    }

    
    double CellICCNeuralCalib_SMC_noCasesFromCellML::GetIIonic(const std::vector<double>* pStateVariables)
    {
        // For state variable interpolation (SVI) we read in interpolated state variables,
        // otherwise for ionic current interpolation (ICI) we use the state variables of this model (node).
        if (!pStateVariables) pStateVariables = &rGetStateVariables();
        const std::vector<double>& rY = *pStateVariables;
        double var_chaste_interface__Membrane__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -70.5156
        double var_chaste_interface__d_Na__d_Na = rY[15];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__f_Na__f_Na = rY[16];
        // Units: dimensionless; Initial value: 0.9997
        double var_chaste_interface__intracellular_Ca__Ca_c = rY[17];
        // Units: millimolar; Initial value: 0.2886
        
        const double var_ICC_neural__m = 8.6799999999999997; // conductance_units
        const double var_ICC_neural__n = 0.0112; // dimensionless
        const double var_ICC_neural__o = -7.2999999999999998; // conductance_units
        const double var_ICC_neural__p = -0.14099999999999999; // dimensionless
        const double var_ICC_neural__gbk_neur = var_ICC_neural__m * exp(var_ICC_neural__n * mParameters[5]) + var_ICC_neural__o * exp(var_ICC_neural__p * mParameters[5]); // conductance_units
        const double var_Membrane__C_m_converted = 9.9999999999999995e-7 * mParameters[1]; // uF
        const double var_i_Ca__E_Ca = -20; // voltage_units
        const double var_i_Ca__G_MCa = 4; // conductance_units
        const double var_i_Ca__k_Ca = 0.93999999999999995; // millimolar
        const double var_i_Ca__q = 4; // dimensionless
        const double var_i_Na__E_Na = 80; // voltage_units
        const double var_i_Na__G_Na = 28; // conductance_units
        const double var_i_Na__I_Na = (-var_i_Na__E_Na + var_chaste_interface__Membrane__V_m) * var_chaste_interface__d_Na__d_Na * var_chaste_interface__f_Na__f_Na * var_i_Na__G_Na; // current_units
        const double var_d_BK__d_BK = 1 / (1 + exp(-13.815510557964274 - 2 * log(var_chaste_interface__intracellular_Ca__Ca_c) - 0.058823529411764705 * var_chaste_interface__Membrane__V_m)); // dimensionless
        const double var_i_BK__I_BK = (-mParameters[0] + var_chaste_interface__Membrane__V_m) * var_ICC_neural__gbk_neur * var_d_BK__d_BK; // current_units
        const double var_i_Ca__G_Ca = pow(var_chaste_interface__intracellular_Ca__Ca_c, var_i_Ca__q) * var_i_Ca__G_MCa / (pow(var_i_Ca__k_Ca, var_i_Ca__q) + pow(var_chaste_interface__intracellular_Ca__Ca_c, var_i_Ca__q)); // conductance_units
        const double var_i_Ca__I_Ca = (-var_i_Ca__E_Ca + var_chaste_interface__Membrane__V_m) * var_i_Ca__G_Ca; // current_units
        const double var_chaste_interface__i_ionic = 1.0000000000000002e-6 * (var_i_BK__I_BK + var_i_Ca__I_Ca + var_i_Na__I_Na) * HeartConfig::Instance()->GetCapacitance() / var_Membrane__C_m_converted; // uA_per_cm2

        const double i_ionic = var_chaste_interface__i_ionic;
        EXCEPT_IF_NOT(!std::isnan(i_ionic));
        return i_ionic;
    }

    void CellICCNeuralCalib_SMC_noCasesFromCellML::EvaluateYDerivatives(double var_chaste_interface__Time__time, const std::vector<double>& rY, std::vector<double>& rDY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__Membrane__V_m = (mSetVoltageDerivativeToZero ? this->mFixedVoltage : rY[0]);
        // Units: voltage_units; Initial value: -70.5156
        double var_chaste_interface__SM_Membrane__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8e-05
        double var_chaste_interface__SM_Membrane__Vm_SM = rY[2];
        // Units: voltage_units; Initial value: -69.75
        double var_chaste_interface__d_Ltype_SM__d_Ltype_SM = rY[3];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__f_Ltype_SM__f_Ltype_SM = rY[4];
        // Units: dimensionless; Initial value: 0.95
        double var_chaste_interface__f_ca_Ltype_SM__f_ca_Ltype_SM = rY[5];
        // Units: dimensionless; Initial value: 1.0
        double var_chaste_interface__d_LVA_SM__d_LVA_SM = rY[6];
        // Units: dimensionless; Initial value: 0.02
        double var_chaste_interface__f_LVA_SM__f_LVA_SM = rY[7];
        // Units: dimensionless; Initial value: 0.99
        double var_chaste_interface__xr1_SM__xr1_SM = rY[8];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__xr2_SM__xr2_SM = rY[9];
        // Units: dimensionless; Initial value: 0.82
        double var_chaste_interface__m_Na_SM__m_Na_SM = rY[10];
        // Units: dimensionless; Initial value: 0.005
        double var_chaste_interface__h_Na_SM__h_Na_SM = rY[11];
        // Units: dimensionless; Initial value: 0.05787
        double var_chaste_interface__xa1_SM__xa1_SM = rY[12];
        // Units: dimensionless; Initial value: 0.00414
        double var_chaste_interface__xa2_SM__xa2_SM = rY[13];
        // Units: dimensionless; Initial value: 0.72
        double var_chaste_interface__m_NSCC_SM__m_NSCC_SM = rY[14];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__d_Na__d_Na = rY[15];
        // Units: dimensionless; Initial value: 0.0
        double var_chaste_interface__f_Na__f_Na = rY[16];
        // Units: dimensionless; Initial value: 0.9997
        double var_chaste_interface__intracellular_Ca__Ca_c = rY[17];
        // Units: millimolar; Initial value: 0.2886
        double var_chaste_interface__intracellular_Ca__Ca_s = rY[18];
        // Units: millimolar; Initial value: 2.0014
        double var_chaste_interface__intracellular_Ca__IP_3 = rY[19];
        // Units: millimolar; Initial value: 0.3791

        // Mathematics
        double d_dt_chaste_interface_var_Membrane__V_m;
        const double var_Environment__Ca_o = 2.5; // millimolar
        const double var_Environment__F = 96486; // F_units
        const double var_Environment__K_o = 5.9000000000000004; // millimolar
        const double var_Environment__Na_o = 137; // millimolar
        const double var_Environment__Q10Ca = 2.1000000000000001; // dimensionless
        const double var_Environment__Q10K = 1.365; // dimensionless
        const double var_Environment__Q10Na = 2.4500000000000002; // dimensionless
        const double var_Environment__R = 8314.3999999999996; // R_units
        const double var_Environment__T = 310; // Temperature_units
        const double var_Environment__RToF = var_Environment__R * var_Environment__T / var_Environment__F; // voltage_units
        const double var_Environment__T_exp = 297; // Temperature_units
        const double var_Environment__T_correction_BK = 1.1000000000000001 * var_Environment__T - 1.1000000000000001 * var_Environment__T_exp; // conductance_units
        const double var_Environment__T_correction_Ca = pow(var_Environment__Q10Ca, (0.10000000000000001 * var_Environment__T - 0.10000000000000001 * var_Environment__T_exp)); // dimensionless
        const double var_Environment__T_correction_K = pow(var_Environment__Q10K, (0.10000000000000001 * var_Environment__T - 0.10000000000000001 * var_Environment__T_exp)); // dimensionless
        const double var_Environment__T_correction_Na = pow(var_Environment__Q10Na, (0.10000000000000001 * var_Environment__T - 0.10000000000000001 * var_Environment__T_exp)); // dimensionless
        const double var_Gap_junction__Gcouple = 1.3; // conductance_units
        const double var_ICC_neural__i = 0.0041200000000000004; // millimolar_per_time_units
        const double var_ICC_neural__j = 0.0315; // dimensionless
        const double var_ICC_neural__k = -0.0040299999999999997; // millimolar_per_time_units
        const double var_ICC_neural__l = -0.38100000000000001; // dimensionless
        const double var_ICC_neural__beta_neur = var_ICC_neural__i * exp(var_ICC_neural__j * mParameters[4]) + var_ICC_neural__k * exp(var_ICC_neural__l * mParameters[4]); // millimolar_per_time_units
        const double var_ICC_neural__stim_ach = mParameters[4]; // dimensionless
        const double var_I_BK_SM__G_max_BK = 45.700000000000003; // conductance_units
        const double var_I_LVA_SM__G_max_LVA = 0.17999999999999999; // conductance_units
        const double var_I_Ltype_SM__G_max_Ltype = 65; // conductance_units
        const double var_I_NSCC_SM__E_NSCC = -28; // voltage_units
        const double var_I_NSCC_SM__G_max_NSCC_SM = 50; // conductance_units
        const double var_I_Na_SM__G_max_Na_SM = 3; // conductance_units
        const double var_I_bk_SM__G_max_bk = 0.0144; // conductance_units
        const double var_I_ka_SM__G_max_ka_SM = 9; // conductance_units
        const double var_I_kr_SM__G_max_kr_SM = 35; // conductance_units
        const double var_J_CaSR_SM__J_max_CaSR = 0.31705; // millimolar_per_millisecond
        const double var_SMC_neural__Ach = ((var_ICC_neural__stim_ach > 4) ? (0.0014) : ((var_ICC_neural__stim_ach > 0) ? (1.0000000000000001e-5 + 0.00034749999999999999 * var_ICC_neural__stim_ach) : (1.0000000000000001e-5))); // millimolar
        const double var_I_NSCC_SM__rach_NSCC_SM = 1 / (1 + 0.01 / var_SMC_neural__Ach); // dimensionless
        const double var_SMC_neural__ejp = ((var_ICC_neural__stim_ach > 0) ? (5) : (0)); // current_units
        const double var_SMC_neural__ijp = 0; // current_units
        const double var_I_LVA_SM__E_Ca = 0.5 * var_Environment__RToF * log(var_Environment__Ca_o / var_chaste_interface__SM_Membrane__Ca_i); // voltage_units
        const double var_I_Ltype_SM__E_Ca = 0.5 * var_Environment__RToF * log(var_Environment__Ca_o / var_chaste_interface__SM_Membrane__Ca_i); // voltage_units
        const double var_I_NSCC_SM__f_ca_NSCC_SM = 1 / (1 + 1.6000000000000004e-15 / pow(var_chaste_interface__SM_Membrane__Ca_i, 4)); // dimensionless
        const double var_J_CaSR_SM__J_CaSR_SM = pow(var_chaste_interface__SM_Membrane__Ca_i, 1.3400000000000001) * var_J_CaSR_SM__J_max_CaSR; // millimolar_per_millisecond
        const double var_SM_Membrane__Cm_SM = 77; // capacitance_units
        const double var_SM_Membrane__K_i = 164; // millimolar
        const double var_I_BK_SM__E_K = var_Environment__RToF * log(var_Environment__K_o / var_SM_Membrane__K_i); // voltage_units
        const double var_I_bk_SM__E_K = var_Environment__RToF * log(var_Environment__K_o / var_SM_Membrane__K_i); // voltage_units
        const double var_I_ka_SM__E_K = var_Environment__RToF * log(var_Environment__K_o / var_SM_Membrane__K_i); // voltage_units
        const double var_I_kr_SM__E_K = var_Environment__RToF * log(var_Environment__K_o / var_SM_Membrane__K_i); // voltage_units
        const double var_SM_Membrane__Na_i = 10; // millimolar
        const double var_I_Na_SM__E_Na = var_Environment__RToF * log(var_Environment__Na_o / var_SM_Membrane__Na_i); // voltage_units
        const double var_I_bk_SM__I_bk_SM = (-var_I_bk_SM__E_K + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_bk_SM__G_max_bk; // current_units
        const double var_I_stim__I_stim = (-var_chaste_interface__SM_Membrane__Vm_SM + var_chaste_interface__Membrane__V_m) * var_Gap_junction__Gcouple; // current_units
        const double var_SM_Membrane__Vol_SM = 3500; // volume_units
        const double var_d_BK_SM__d_BK_SM = 1 / (1 + exp(-13.815510557964274 - 2 * log(var_chaste_interface__SM_Membrane__Ca_i) - 0.058823529411764705 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_I_BK_SM__I_BK_SM = (-var_I_BK_SM__E_K + var_chaste_interface__SM_Membrane__Vm_SM) * (var_Environment__T_correction_BK + var_I_BK_SM__G_max_BK) * var_d_BK_SM__d_BK_SM; // current_units
        const double var_d_LVA_SM__d_inf_LVA_SM = 1 / (1 + exp(-2.5229357798165135 - 0.091743119266055037 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_d_LVA_SM__tau_d_LVA_SM = 3 * var_Environment__T_correction_Ca; // time_units
        const double d_dt_chaste_interface_var_d_LVA_SM__d_LVA_SM = (-var_chaste_interface__d_LVA_SM__d_LVA_SM + var_d_LVA_SM__d_inf_LVA_SM) / var_d_LVA_SM__tau_d_LVA_SM; // 1 / time_units
        const double var_d_Ltype_SM__d_inf_Ltype_SM = 1 / (1 + exp(-3.9534883720930236 - 0.23255813953488372 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_d_Ltype_SM__tau_d_Ltype_SM = 0.46999999999999997 * var_Environment__T_correction_Ca; // time_units
        const double d_dt_chaste_interface_var_d_Ltype_SM__d_Ltype_SM = (-var_chaste_interface__d_Ltype_SM__d_Ltype_SM + var_d_Ltype_SM__d_inf_Ltype_SM) / var_d_Ltype_SM__tau_d_Ltype_SM; // 1 / time_units
        const double var_d_Na__d_inf_Na = 1 / (1 + exp(-1.3999999999999999 - 0.20000000000000001 * var_chaste_interface__Membrane__V_m)); // dimensionless
        const double var_d_Na__tau_d_Na = 10.26; // time_units
        const double d_dt_chaste_interface_var_d_Na__d_Na = (-var_chaste_interface__d_Na__d_Na + var_d_Na__d_inf_Na) * mParameters[2] / var_d_Na__tau_d_Na; // 1 / time_units
        const double var_I_LVA_SM__I_LVA_SM = (-var_I_LVA_SM__E_Ca + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_LVA_SM__G_max_LVA * var_chaste_interface__d_LVA_SM__d_LVA_SM * var_chaste_interface__f_LVA_SM__f_LVA_SM; // current_units
        const double var_f_LVA_SM__f_inf_LVA_SM = 1 / (1 + exp(2.2571428571428571 + 0.14285714285714285 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_f_LVA_SM__tau_f_LVA_SM = 7.5800000000000001 * var_Environment__T_correction_Ca * exp(0.0081700000000000002 * var_chaste_interface__SM_Membrane__Vm_SM); // time_units
        const double d_dt_chaste_interface_var_f_LVA_SM__f_LVA_SM = (-var_chaste_interface__f_LVA_SM__f_LVA_SM + var_f_LVA_SM__f_inf_LVA_SM) / var_f_LVA_SM__tau_f_LVA_SM; // 1 / time_units
        const double var_f_Ltype_SM__f_inf_Ltype_SM = 1 / (1 + exp(4.8314606741573032 + 0.11235955056179775 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_f_Ltype_SM__tau_f_Ltype_SM = 86 * var_Environment__T_correction_Ca; // time_units
        const double d_dt_chaste_interface_var_f_Ltype_SM__f_Ltype_SM = (-var_chaste_interface__f_Ltype_SM__f_Ltype_SM + var_f_Ltype_SM__f_inf_Ltype_SM) / var_f_Ltype_SM__tau_f_Ltype_SM; // 1 / time_units
        const double var_f_Na__f_inf_Na = 1 / (1 + exp(9.3499999999999996 + 0.25 * var_chaste_interface__Membrane__V_m)); // dimensionless
        const double var_f_Na__tau_f_Na = 112.81999999999999; // time_units
        const double d_dt_chaste_interface_var_f_Na__f_Na = (-var_chaste_interface__f_Na__f_Na + var_f_Na__f_inf_Na) * mParameters[2] / var_f_Na__tau_f_Na; // 1 / time_units
        const double var_I_Ltype_SM__I_Ltype_SM = (-var_I_Ltype_SM__E_Ca + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_Ltype_SM__G_max_Ltype * var_chaste_interface__d_Ltype_SM__d_Ltype_SM * var_chaste_interface__f_Ltype_SM__f_Ltype_SM * var_chaste_interface__f_ca_Ltype_SM__f_ca_Ltype_SM; // current_units
        const double d_dt_chaste_interface_var_SM_Membrane__Ca_i = -var_J_CaSR_SM__J_CaSR_SM + 500 * (-var_I_LVA_SM__I_LVA_SM - var_I_Ltype_SM__I_Ltype_SM) / (var_Environment__F * var_SM_Membrane__Vol_SM); // millimolar / time_units
        const double var_f_ca_Ltype_SM__f_ca_inf_Ltype_SM = 1 - 1 / (1 + exp(23.20534351145038 - 76335.877862595415 * var_chaste_interface__SM_Membrane__Ca_i)); // dimensionless
        const double var_f_ca_Ltype_SM__tau_f_ca_Ltype_SM = 2 * var_Environment__T_correction_Ca; // time_units
        const double d_dt_chaste_interface_var_f_ca_Ltype_SM__f_ca_Ltype_SM = (-var_chaste_interface__f_ca_Ltype_SM__f_ca_Ltype_SM + var_f_ca_Ltype_SM__f_ca_inf_Ltype_SM) / var_f_ca_Ltype_SM__tau_f_ca_Ltype_SM; // 1 / time_units
        const double var_h_Na_SM__h_inf_Na = 1 / (1 + exp(26 + 0.33333333333333331 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_h_Na_SM__tau_h_Na = (5.5 - 0.25 * var_chaste_interface__SM_Membrane__Vm_SM) * var_Environment__T_correction_Na; // time_units
        const double d_dt_chaste_interface_var_h_Na_SM__h_Na_SM = (-var_chaste_interface__h_Na_SM__h_Na_SM + var_h_Na_SM__h_inf_Na) / var_h_Na_SM__tau_h_Na; // 1 / time_units
        const double var_intracellular_Ca__K = 0.00064349999999999997; // per_time_units
        const double var_intracellular_Ca__P_MV = 0.032500000000000001; // millimolar_per_time_units
        const double var_intracellular_Ca__V_0 = 0.00011; // millimolar_per_time_units
        const double var_intracellular_Ca__V_1 = 0.00033; // per_time_units
        const double var_intracellular_Ca__V_M2 = 0.0048999999999999998; // millimolar_per_time_units
        const double var_intracellular_Ca__V_M3 = 0.32240000000000002; // millimolar_per_time_units
        const double var_intracellular_Ca__V_M4 = 0.00048749999999999998; // millimolar_per_time_units
        const double var_intracellular_Ca__V_in = var_chaste_interface__intracellular_Ca__IP_3 * var_intracellular_Ca__V_1 + var_intracellular_Ca__V_0; // millimolar_per_time_units
        const double var_intracellular_Ca__k_2 = 1; // millimolar
        const double var_intracellular_Ca__k_4 = 0.5; // millimolar
        const double var_intracellular_Ca__k_a = 0.90000000000000002; // millimolar
        const double var_intracellular_Ca__k_f = 5.8499999999999999e-5; // per_time_units
        const double var_intracellular_Ca__k_p = 0.65000000000000002; // millimolar
        const double var_intracellular_Ca__k_r = 2; // millimolar
        const double var_intracellular_Ca__k_v = -68; // voltage_units
        const double var_intracellular_Ca__m = 4; // dimensionless
        const double var_intracellular_Ca__n = 2; // dimensionless
        const double var_intracellular_Ca__V_2 = pow(var_chaste_interface__intracellular_Ca__Ca_c, var_intracellular_Ca__n) * var_intracellular_Ca__V_M2 / (pow(var_chaste_interface__intracellular_Ca__Ca_c, var_intracellular_Ca__n) + pow(var_intracellular_Ca__k_2, var_intracellular_Ca__n)); // millimolar_per_time_units
        const double var_intracellular_Ca__o = 4; // dimensionless
        const double var_intracellular_Ca__r = 5; // dimensionless
        const double var_intracellular_Ca__u = 4; // dimensionless
        const double d_dt_chaste_interface_var_intracellular_Ca__IP_3 = ((1 - pow(var_chaste_interface__Membrane__V_m, var_intracellular_Ca__r) / (pow(var_chaste_interface__Membrane__V_m, var_intracellular_Ca__r) + pow(var_intracellular_Ca__k_v, var_intracellular_Ca__r))) * var_intracellular_Ca__P_MV - var_chaste_interface__intracellular_Ca__IP_3 * mParameters[3] - pow(var_chaste_interface__intracellular_Ca__IP_3, var_intracellular_Ca__u) * var_intracellular_Ca__V_M4 / (pow(var_chaste_interface__intracellular_Ca__IP_3, var_intracellular_Ca__u) + pow(var_intracellular_Ca__k_4, var_intracellular_Ca__u)) + var_ICC_neural__beta_neur) * mParameters[2]; // millimolar / time_units
        const double var_intracellular_Ca__w = 4; // dimensionless
        const double var_intracellular_Ca__V_3 = pow(var_chaste_interface__intracellular_Ca__Ca_c, var_intracellular_Ca__w) * pow(var_chaste_interface__intracellular_Ca__Ca_s, var_intracellular_Ca__m) * pow(var_chaste_interface__intracellular_Ca__IP_3, var_intracellular_Ca__o) * var_intracellular_Ca__V_M3 / ((pow(var_chaste_interface__intracellular_Ca__Ca_c, var_intracellular_Ca__w) + pow(var_intracellular_Ca__k_a, var_intracellular_Ca__w)) * (pow(var_chaste_interface__intracellular_Ca__Ca_s, var_intracellular_Ca__m) + pow(var_intracellular_Ca__k_r, var_intracellular_Ca__m)) * (pow(var_chaste_interface__intracellular_Ca__IP_3, var_intracellular_Ca__o) + pow(var_intracellular_Ca__k_p, var_intracellular_Ca__o))); // millimolar_per_time_units
        const double d_dt_chaste_interface_var_intracellular_Ca__Ca_c = (-var_intracellular_Ca__V_2 + var_chaste_interface__intracellular_Ca__Ca_s * var_intracellular_Ca__k_f - var_chaste_interface__intracellular_Ca__Ca_c * var_intracellular_Ca__K + var_intracellular_Ca__V_3 + var_intracellular_Ca__V_in) * mParameters[2]; // millimolar / time_units
        const double d_dt_chaste_interface_var_intracellular_Ca__Ca_s = (-var_intracellular_Ca__V_3 - var_chaste_interface__intracellular_Ca__Ca_s * var_intracellular_Ca__k_f + var_intracellular_Ca__V_2) * mParameters[2]; // millimolar / time_units
        const double var_I_NSCC_SM__I_NSCC_SM = (-var_I_NSCC_SM__E_NSCC + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_NSCC_SM__G_max_NSCC_SM * var_I_NSCC_SM__f_ca_NSCC_SM * var_I_NSCC_SM__rach_NSCC_SM * var_chaste_interface__m_NSCC_SM__m_NSCC_SM; // current_units
        const double var_m_NSCC_SM__m_inf_NSCC_SM = 1 / (1 + exp(-1.25 - 0.050000000000000003 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_m_NSCC_SM__tau_m_NSCC_SM = 150 / (1 + exp(-2.5384615384615383 - 0.038461538461538464 * var_chaste_interface__SM_Membrane__Vm_SM)); // time_units
        const double d_dt_chaste_interface_var_m_NSCC_SM__m_NSCC_SM = (-var_chaste_interface__m_NSCC_SM__m_NSCC_SM + var_m_NSCC_SM__m_inf_NSCC_SM) / var_m_NSCC_SM__tau_m_NSCC_SM; // 1 / time_units
        const double var_I_Na_SM__I_Na_SM = (-var_I_Na_SM__E_Na + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_Na_SM__G_max_Na_SM * var_chaste_interface__h_Na_SM__h_Na_SM * var_chaste_interface__m_Na_SM__m_Na_SM; // current_units
        const double var_m_Na_SM__m_inf_Na = 1 / (1 + exp(-9.7916666666666679 - 0.20833333333333334 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double var_m_Na_SM__tau_m_Na = (0.44 - 0.017000000000000001 * var_chaste_interface__SM_Membrane__Vm_SM) * var_Environment__T_correction_Na; // time_units
        const double d_dt_chaste_interface_var_m_Na_SM__m_Na_SM = (-var_chaste_interface__m_Na_SM__m_Na_SM + var_m_Na_SM__m_inf_Na) / var_m_Na_SM__tau_m_Na; // 1 / time_units
        const double var_xa1_SM__tau_xa1_SM = (31.800000000000001 + 175 * exp(-1.9821029982505176 * pow((1 + 0.022522522522522525 * var_chaste_interface__SM_Membrane__Vm_SM), 2))) * var_Environment__T_correction_K; // time_units
        const double var_xa1_SM__xa1_inf_SM = 1 / (1 + exp(-3.3544303797468351 - 0.12658227848101264 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double d_dt_chaste_interface_var_xa1_SM__xa1_SM = (-var_chaste_interface__xa1_SM__xa1_SM + var_xa1_SM__xa1_inf_SM) / var_xa1_SM__tau_xa1_SM; // 1 / time_units
        const double var_xa2_SM__tau_xa2_SM = 90 * var_Environment__T_correction_K; // time_units
        const double var_I_ka_SM__I_ka_SM = (-var_I_ka_SM__E_K + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_ka_SM__G_max_ka_SM * var_chaste_interface__xa1_SM__xa1_SM * var_chaste_interface__xa2_SM__xa2_SM; // current_units
        const double var_xa2_SM__xa2_inf_SM = 0.10000000000000001 + 0.90000000000000002 / (1 + exp(10.483870967741936 + 0.16129032258064516 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double d_dt_chaste_interface_var_xa2_SM__xa2_SM = (-var_chaste_interface__xa2_SM__xa2_SM + var_xa2_SM__xa2_inf_SM) / var_xa2_SM__tau_xa2_SM; // 1 / time_units
        const double var_xr1_SM__tau_xr1_SM = 80 * var_Environment__T_correction_K; // time_units
        const double var_xr1_SM__xr1_inf_SM = 1 / (1 + exp(-5.4000000000000004 - 0.20000000000000001 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double d_dt_chaste_interface_var_xr1_SM__xr1_SM = (-var_chaste_interface__xr1_SM__xr1_SM + var_xr1_SM__xr1_inf_SM) / var_xr1_SM__tau_xr1_SM; // 1 / time_units
        const double var_xr2_SM__tau_xr2_SM = (-707 + 1481 * exp(0.37894736842105264 + 0.010526315789473684 * var_chaste_interface__SM_Membrane__Vm_SM)) * var_Environment__T_correction_K; // time_units
        const double var_I_kr_SM__I_kr_SM = (-var_I_kr_SM__E_K + var_chaste_interface__SM_Membrane__Vm_SM) * var_I_kr_SM__G_max_kr_SM * var_chaste_interface__xr1_SM__xr1_SM * var_chaste_interface__xr2_SM__xr2_SM; // current_units
        const double d_dt_chaste_interface_var_SM_Membrane__Vm_SM = -(-var_SMC_neural__ejp - var_I_stim__I_stim + var_I_BK_SM__I_BK_SM + var_I_LVA_SM__I_LVA_SM + var_I_Ltype_SM__I_Ltype_SM + var_I_NSCC_SM__I_NSCC_SM + var_I_Na_SM__I_Na_SM + var_I_bk_SM__I_bk_SM + var_I_ka_SM__I_ka_SM + var_I_kr_SM__I_kr_SM + var_SMC_neural__ijp) / var_SM_Membrane__Cm_SM; // voltage_units / time_units
        const double var_xr2_SM__xr2_inf_SM = 0.20000000000000001 + 0.80000000000000004 / (1 + exp(5.7999999999999998 + 0.10000000000000001 * var_chaste_interface__SM_Membrane__Vm_SM)); // dimensionless
        const double d_dt_chaste_interface_var_xr2_SM__xr2_SM = (-var_chaste_interface__xr2_SM__xr2_SM + var_xr2_SM__xr2_inf_SM) / var_xr2_SM__tau_xr2_SM; // 1 / time_units

        if (mSetVoltageDerivativeToZero)
        {
            d_dt_chaste_interface_var_Membrane__V_m = 0.0;
        }
        else
        {
            const double var_ICC_neural__m = 8.6799999999999997; // conductance_units
            const double var_ICC_neural__n = 0.0112; // dimensionless
            const double var_ICC_neural__o = -7.2999999999999998; // conductance_units
            const double var_ICC_neural__p = -0.14099999999999999; // dimensionless
            const double var_ICC_neural__gbk_neur = var_ICC_neural__m * exp(var_ICC_neural__n * mParameters[5]) + var_ICC_neural__o * exp(var_ICC_neural__p * mParameters[5]); // conductance_units
            const double var_Membrane__C_m_converted = 9.9999999999999995e-7 * mParameters[1]; // uF
            const double var_Membrane__I_neural_ICC_converted = -GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2
            const double var_Membrane__I_neural_ICC = 999999.99999999988 * var_Membrane__C_m_converted * var_Membrane__I_neural_ICC_converted / HeartConfig::Instance()->GetCapacitance(); // current_units
            const double var_i_Ca__E_Ca = -20; // voltage_units
            const double var_i_Ca__G_MCa = 4; // conductance_units
            const double var_i_Ca__k_Ca = 0.93999999999999995; // millimolar
            const double var_i_Ca__q = 4; // dimensionless
            const double var_i_Na__E_Na = 80; // voltage_units
            const double var_i_Na__G_Na = 28; // conductance_units
            const double var_i_Na__I_Na = (-var_i_Na__E_Na + var_chaste_interface__Membrane__V_m) * var_chaste_interface__d_Na__d_Na * var_chaste_interface__f_Na__f_Na * var_i_Na__G_Na; // current_units
            const double var_d_BK__d_BK = 1 / (1 + exp(-13.815510557964274 - 2 * log(var_chaste_interface__intracellular_Ca__Ca_c) - 0.058823529411764705 * var_chaste_interface__Membrane__V_m)); // dimensionless
            const double var_i_BK__I_BK = (-mParameters[0] + var_chaste_interface__Membrane__V_m) * var_ICC_neural__gbk_neur * var_d_BK__d_BK; // current_units
            const double var_i_Ca__G_Ca = pow(var_chaste_interface__intracellular_Ca__Ca_c, var_i_Ca__q) * var_i_Ca__G_MCa / (pow(var_i_Ca__k_Ca, var_i_Ca__q) + pow(var_chaste_interface__intracellular_Ca__Ca_c, var_i_Ca__q)); // conductance_units
            const double var_i_Ca__I_Ca = (-var_i_Ca__E_Ca + var_chaste_interface__Membrane__V_m) * var_i_Ca__G_Ca; // current_units
            d_dt_chaste_interface_var_Membrane__V_m = -(-var_Membrane__I_neural_ICC + var_i_BK__I_BK + var_i_Ca__I_Ca + var_i_Na__I_Na) * mParameters[2] / mParameters[1]; // voltage_units / time_units
        }
        
        rDY[0] = d_dt_chaste_interface_var_Membrane__V_m;
        rDY[1] = d_dt_chaste_interface_var_SM_Membrane__Ca_i;
        rDY[2] = d_dt_chaste_interface_var_SM_Membrane__Vm_SM;
        rDY[3] = d_dt_chaste_interface_var_d_Ltype_SM__d_Ltype_SM;
        rDY[4] = d_dt_chaste_interface_var_f_Ltype_SM__f_Ltype_SM;
        rDY[5] = d_dt_chaste_interface_var_f_ca_Ltype_SM__f_ca_Ltype_SM;
        rDY[6] = d_dt_chaste_interface_var_d_LVA_SM__d_LVA_SM;
        rDY[7] = d_dt_chaste_interface_var_f_LVA_SM__f_LVA_SM;
        rDY[8] = d_dt_chaste_interface_var_xr1_SM__xr1_SM;
        rDY[9] = d_dt_chaste_interface_var_xr2_SM__xr2_SM;
        rDY[10] = d_dt_chaste_interface_var_m_Na_SM__m_Na_SM;
        rDY[11] = d_dt_chaste_interface_var_h_Na_SM__h_Na_SM;
        rDY[12] = d_dt_chaste_interface_var_xa1_SM__xa1_SM;
        rDY[13] = d_dt_chaste_interface_var_xa2_SM__xa2_SM;
        rDY[14] = d_dt_chaste_interface_var_m_NSCC_SM__m_NSCC_SM;
        rDY[15] = d_dt_chaste_interface_var_d_Na__d_Na;
        rDY[16] = d_dt_chaste_interface_var_f_Na__f_Na;
        rDY[17] = d_dt_chaste_interface_var_intracellular_Ca__Ca_c;
        rDY[18] = d_dt_chaste_interface_var_intracellular_Ca__Ca_s;
        rDY[19] = d_dt_chaste_interface_var_intracellular_Ca__IP_3;
    }

    std::vector<double> CellICCNeuralCalib_SMC_noCasesFromCellML::ComputeDerivedQuantities(double var_chaste_interface__Time__time, const std::vector<double> & rY)
    {
        // Inputs:
        // Time units: millisecond
        double var_chaste_interface__SM_Membrane__Ca_i = rY[1];
        // Units: millimolar; Initial value: 8e-05
        
        // Mathematics
        const double var_Membrane__C_m_converted = 9.9999999999999995e-7 * mParameters[1]; // uF
        const double var_Membrane__I_neural_ICC_converted = -GetIntracellularAreaStimulus(var_chaste_interface__Time__time); // uA_per_cm2

        std::vector<double> dqs(4);
        dqs[0] = var_chaste_interface__Time__time;
        dqs[1] = var_chaste_interface__SM_Membrane__Ca_i;
        dqs[2] = var_Membrane__C_m_converted;
        dqs[3] = var_Membrane__I_neural_ICC_converted;
        return dqs;
    }

template<>
void OdeSystemInformation<CellICCNeuralCalib_SMC_noCasesFromCellML>::Initialise(void)
{
    this->mSystemName = "ICC_SMC";
    this->mFreeVariableName = "Time__time";
    this->mFreeVariableUnits = "time_units";

    // rY[0]:
    this->mVariableNames.push_back("membrane_voltage");
    this->mVariableUnits.push_back("voltage_units");
    this->mInitialConditions.push_back(-70.5156);

    // rY[1]:
    this->mVariableNames.push_back("cytosolic_calcium_concentration");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(8e-05);

    // rY[2]:
    this->mVariableNames.push_back("SM_Membrane__Vm_SM");
    this->mVariableUnits.push_back("voltage_units");
    this->mInitialConditions.push_back(-69.75);

    // rY[3]:
    this->mVariableNames.push_back("d_Ltype_SM__d_Ltype_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[4]:
    this->mVariableNames.push_back("f_Ltype_SM__f_Ltype_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.95);

    // rY[5]:
    this->mVariableNames.push_back("f_ca_Ltype_SM__f_ca_Ltype_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(1.0);

    // rY[6]:
    this->mVariableNames.push_back("d_LVA_SM__d_LVA_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.02);

    // rY[7]:
    this->mVariableNames.push_back("f_LVA_SM__f_LVA_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.99);

    // rY[8]:
    this->mVariableNames.push_back("xr1_SM__xr1_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[9]:
    this->mVariableNames.push_back("xr2_SM__xr2_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.82);

    // rY[10]:
    this->mVariableNames.push_back("m_Na_SM__m_Na_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.005);

    // rY[11]:
    this->mVariableNames.push_back("h_Na_SM__h_Na_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.05787);

    // rY[12]:
    this->mVariableNames.push_back("xa1_SM__xa1_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.00414);

    // rY[13]:
    this->mVariableNames.push_back("xa2_SM__xa2_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.72);

    // rY[14]:
    this->mVariableNames.push_back("m_NSCC_SM__m_NSCC_SM");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[15]:
    this->mVariableNames.push_back("d_Na__d_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.0);

    // rY[16]:
    this->mVariableNames.push_back("f_Na__f_Na");
    this->mVariableUnits.push_back("dimensionless");
    this->mInitialConditions.push_back(0.9997);

    // rY[17]:
    this->mVariableNames.push_back("intracellular_Ca__Ca_c");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.2886);

    // rY[18]:
    this->mVariableNames.push_back("intracellular_Ca__Ca_s");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(2.0014);

    // rY[19]:
    this->mVariableNames.push_back("intracellular_Ca__IP_3");
    this->mVariableUnits.push_back("millimolar");
    this->mInitialConditions.push_back(0.3791);

    // mParameters[0]:
    this->mParameterNames.push_back("E_K_ICC");
    this->mParameterUnits.push_back("voltage_units");

    // mParameters[1]:
    this->mParameterNames.push_back("Membrane__C_m");
    this->mParameterUnits.push_back("capacitance_units");

    // mParameters[2]:
    this->mParameterNames.push_back("correction");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[3]:
    this->mParameterNames.push_back("eta");
    this->mParameterUnits.push_back("per_time_units");

    // mParameters[4]:
    this->mParameterNames.push_back("excitatory_neural");
    this->mParameterUnits.push_back("dimensionless");

    // mParameters[5]:
    this->mParameterNames.push_back("inhibitory_neural");
    this->mParameterUnits.push_back("dimensionless");

    // Derived Quantity index [0]:
    this->mDerivedQuantityNames.push_back("Time__time");
    this->mDerivedQuantityUnits.push_back("time_units");

    // Derived Quantity index [1]:
    this->mDerivedQuantityNames.push_back("cytosolic_calcium_concentration");
    this->mDerivedQuantityUnits.push_back("millimolar");

    // Derived Quantity index [2]:
    this->mDerivedQuantityNames.push_back("membrane_capacitance");
    this->mDerivedQuantityUnits.push_back("uF");

    // Derived Quantity index [3]:
    this->mDerivedQuantityNames.push_back("membrane_stimulus_current");
    this->mDerivedQuantityUnits.push_back("uA_per_cm2");

    this->mInitialised = true;
}

// Serialization for Boost >= 1.36
#include "SerializationExportWrapperForCpp.hpp"
CHASTE_CLASS_EXPORT(CellICCNeuralCalib_SMC_noCasesFromCellML)

